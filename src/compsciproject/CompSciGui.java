/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package compsciproject;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.Component;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.io.Writer;
import static java.lang.Double.NaN;
import static java.lang.ProcessBuilder.Redirect.to;
import java.nio.charset.Charset;
import java.nio.charset.StandardCharsets;
import static java.nio.file.Files.exists;
import java.text.SimpleDateFormat;
import java.util.*;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.activation.DataHandler;
/**
 *
 * @author Ricky
 */



import javax.mail.*;
import javax.mail.internet.*;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
import static sun.net.www.http.HttpClient.New;
import static sun.net.www.http.HttpClient.New;
public class CompSciGui extends javax.swing.JFrame {
String date = new SimpleDateFormat("MM-dd-yyyy").format(new Date());
    static void java() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
 boolean valid=false;
    private boolean exists;
    private String fName;
    private CharSequence origText;
  



    /**
     * Creates new form CompSciGui
     */
    public CompSciGui() {
        initComponents();
        loadTeam();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jMenu2 = new javax.swing.JMenu();
        distance = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        time = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        sets = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        reps = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        compileButton = new javax.swing.JButton();
        sendButton = new javax.swing.JButton();
        enterAthleteName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        enterAthleteEmail = new javax.swing.JTextField();
        addAthlete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        teamList = new javax.swing.JList();
        newTeamButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        recipientsList = new javax.swing.JList();
        jLabel9 = new javax.swing.JLabel();
        selectAllButton = new javax.swing.JButton();
        createCustomMessage = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        timedMile = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        easyPace = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        mediumPace = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        tempoPace = new javax.swing.JTextField();
        paceCalcButton = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        intervalPace = new javax.swing.JTextField();
        easySetPace = new javax.swing.JButton();
        medSetPace = new javax.swing.JButton();
        tempSetPace = new javax.swing.JButton();
        intervalSetPace = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        removeAthleteButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        output = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        resetLog = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jMenu1.setText("jMenu1");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 255));

        jLabel1.setText("Distance");

        jLabel2.setText("Time/Pace");

        jLabel3.setText("Sets");

        jLabel4.setText("Reps");

        compileButton.setText("Compile");
        compileButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                compileButtonMouseClicked(evt);
            }
        });

        sendButton.setBackground(new java.awt.Color(51, 153, 0));
        sendButton.setText("Send");
        sendButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendButtonMouseClicked(evt);
            }
        });
        sendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendButtonActionPerformed(evt);
            }
        });

        jLabel17.setText("Name");

        jLabel20.setText("Email");

        enterAthleteEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterAthleteEmailActionPerformed(evt);
            }
        });

        addAthlete.setText("Add to team");
        addAthlete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addAthleteMouseClicked(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 72)); // NOI18N
        jLabel6.setText("ECoach");

        teamList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        teamList.setSelectedIndex(0);
        teamList.setSelectionBackground(new java.awt.Color(204, 204, 255));
        teamList.setSelectionForeground(new java.awt.Color(0, 0, 0));
        teamList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teamListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(teamList);

        newTeamButton.setText("New Team");
        newTeamButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newTeamButtonMouseClicked(evt);
            }
        });

        jLabel7.setText("Team");

        recipientsList.setSelectionBackground(new java.awt.Color(255, 102, 102));
        recipientsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                recipientsListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(recipientsList);

        jLabel9.setText("Recipients");

        selectAllButton.setText("Select All");
        selectAllButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                selectAllButtonMouseClicked(evt);
            }
        });

        createCustomMessage.setText("Create A  Custom Message");
        createCustomMessage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createCustomMessageMouseClicked(evt);
            }
        });

        jLabel18.setText("OR");

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jLabel10.setText("Timed 1600");

        timedMile.setText("mm:ss");

        jLabel11.setText("Easy Pace");

        easyPace.setEditable(false);

        jLabel12.setText("Medium Pace");

        mediumPace.setEditable(false);

        jLabel13.setText("Tempo Pace");

        tempoPace.setEditable(false);

        paceCalcButton.setText("Calculate");
        paceCalcButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paceCalcButtonMouseClicked(evt);
            }
        });

        jLabel14.setText("Interval Pace");

        intervalPace.setEditable(false);

        easySetPace.setText("Set Pace");
        easySetPace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                easySetPaceMouseClicked(evt);
            }
        });

        medSetPace.setText("Set Pace");
        medSetPace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medSetPaceMouseClicked(evt);
            }
        });

        tempSetPace.setText("Set Pace");
        tempSetPace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tempSetPaceMouseClicked(evt);
            }
        });

        intervalSetPace.setText("Set Pace");
        intervalSetPace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                intervalSetPaceMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(jLabel14))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(timedMile, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .addComponent(easyPace)
                            .addComponent(mediumPace)
                            .addComponent(tempoPace)
                            .addComponent(intervalPace))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(easySetPace)
                            .addComponent(medSetPace)
                            .addComponent(tempSetPace)
                            .addComponent(intervalSetPace)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(paceCalcButton)))
                .addContainerGap(71, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(timedMile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(easyPace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(easySetPace))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(mediumPace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(medSetPace))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tempSetPace)
                    .addComponent(tempoPace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(intervalSetPace)
                    .addComponent(intervalPace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addComponent(paceCalcButton)
                .addContainerGap(144, Short.MAX_VALUE))
        );

        jLabel8.setText("Pace Calculator");

        removeAthleteButton.setBackground(new java.awt.Color(255, 0, 0));
        removeAthleteButton.setText("Remove an Athlete");
        removeAthleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeAthleteButtonMouseClicked(evt);
            }
        });

        output.setEditable(false);
        output.setColumns(20);
        output.setLineWrap(true);
        output.setRows(5);
        output.setWrapStyleWord(true);
        jScrollPane2.setViewportView(output);

        jButton1.setText("View Past Workouts");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        resetLog.setText("Reset Workout Log");
        resetLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetLogMouseClicked(evt);
            }
        });
        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(newTeamButton, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(35, 35, 35)
                                .addComponent(resetLog, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(distance, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                                    .addComponent(time)
                                    .addComponent(sets)
                                    .addComponent(reps))
                                .addGap(46, 46, 46)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(sendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(50, 50, 50)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(enterAthleteName, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(enterAthleteEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(28, 28, 28)
                                        .addComponent(addAthlete)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(removeAthleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(compileButton)
                                        .addGap(32, 32, 32)
                                        .addComponent(jLabel18)
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(createCustomMessage)
                                            .addComponent(selectAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(73, 73, 73)
                                        .addComponent(jLabel9)
                                        .addGap(68, 68, 68))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(46, 46, 46)))))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel8))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(323, 323, 323)
                .addComponent(jLabel6)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(51, 51, 51))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(102, 102, 102)
                                .addComponent(sendButton)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(distance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(time, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(sets, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(reps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(compileButton)
                            .addComponent(jLabel18)
                            .addComponent(createCustomMessage))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(selectAllButton)
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(enterAthleteName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel17))
                                        .addGap(31, 31, 31)
                                        .addComponent(jLabel20))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(enterAthleteEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addAthlete)))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(newTeamButton)
                                    .addComponent(removeAthleteButton)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(resetLog))
                        .addGap(18, 41, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void compileButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_compileButtonMouseClicked
if(time.getText().equals("") || distance.getText().equals(""))  {
output.setText("Please enter a distance and time");
valid=false;
}else if(sets.getText().equals("") && reps.getText().equals("") && !(time.getText().equals("") && distance.getText().equals(""))){
output.setText("Hello athlete, your coach has assigned a workout. Coach wants you to do a " + distance.getText().toLowerCase() + " run at " +time.getText().toLowerCase() + " pace.");
valid=true;
}else if(!(time.getText().equals("") || distance.getText().equals("")) && (sets.getText().equals("")) || reps.getText().equals(""))   {
output.setText("Please enter both sets and reps");
valid=false;
}else{
output.setText("Hello athlete, your coach has assigned a workout. Coach wants you to run " + distance.getText() +" at a pace of " + time.getText() + ". Do this for " + sets.getText() + " sets and " + reps.getText() +" reps. Have a great workout!" );
valid=true; 
// TODO add your handling code here:
}
    }//GEN-LAST:event_compileButtonMouseClicked
public void compile(){
if(time.getText().equals("") || distance.getText().equals(""))  {
output.setText("Please enter a distance and time");
valid=false;
}else if(sets.getText().equals("") && reps.getText().equals("") && !(time.getText().equals("") && distance.getText().equals(""))){
output.setText("Hello athlete, your coach has assigned a workout. Coach wants you to do a " + distance.getText().toLowerCase() + " run at " +time.getText().toLowerCase() + " pace.");
valid=true;
}else if(!(time.getText().equals("") || distance.getText().equals("")) && (sets.getText().equals("")) || reps.getText().equals(""))   {
output.setText("Please enter both sets and reps");
valid=false;
}else{
output.setText("Hello athlete, your coach has assigned a workout. Coach wants you to run " + distance.getText() +" at a pace of " + time.getText() + ". Do this for " + sets.getText() + " sets and " + reps.getText() +" reps. Have a great workout!" );
valid=true; 
// TODO add your handling code here:
}
}
public void setCompilersBlank(){
    time.setText("");
    distance.setText("");
    sets.setText("");
    reps.setText("");
}
    private void sendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendButtonActionPerformed
        // TODO add your ndlig code here:
    }//GEN-LAST:event_sendButtonActionPerformed

    private void PasswordAuthentication(String text, String text0) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    

   


    private void sendButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendButtonMouseClicked
        
       String [] to= (String[]) recipients.toArray(new String[numRecipients]);
       System.out.println(to[0]);
        if(valid==true){
        if(!(to.length==0)){    
        String email= "ibcoachtest123@gmail.com";
        String password= "harrisonhs";
          
        
        JavaMail send= new JavaMail();
        send.sendMail(email,password,to,output.getText());
        String workout=output.getText();
        if(send.sent=true){
        JOptionPane.showMessageDialog(null, "Message Sent");
        valid=false;
        numRecipients=0;
        recipients=null;
        recipientsList.setModel(blank);
        setCompilersBlank();
        output.setText("");
        
        }
    
        String fName="F:\\coachworkout.txt"; 
            String origText="";
            try {
                origText = new Scanner( new File("F:\\coachworkout.txt") ).useDelimiter("\\A").next();
           } catch (FileNotFoundException ex) {
               Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
           }    
        File file = new File(fName);
        boolean exists = file.exists();
        System.out.println("'"+fName + "' exists = " +exists);
        System.out.println(file.getAbsolutePath());
        if( ! exists)
            {
                 
                System.out.println( "'"+ file.getAbsolutePath()+ "' was the full path of  the file I couldn't find" );
              
            //would you like me to make it
         
               
                         
                         
                
                    // Code to use when OK is PRESSED.
                    
                    System.out.println("\t  I am going to make the file");
                     try{
                        
                         //you can see if file was correctly made using the followign boolean
                       boolean successfullyMadeFile = file.createNewFile();
                        
                    }
                     catch (IOException ioe) {
                       System.out.println("unable to create file, error: " + ioe); 
                    }
                
               
                FileWriter fw = null;
            
            try {
                fw = new FileWriter(file);
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            try (BufferedWriter bw = new BufferedWriter(fw)) {
                
                bw.write(date + ":" + workout);
                
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
         
        }else{
            try {
                Writer output;
                output = new BufferedWriter(new FileWriter("F:\\coachworkout.txt", true));
                output.write(System.getProperty("line.separator"));
        
                output.write(date + ":" + workout);
                output.close();
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        }else{
        output.setText("Please choose your recipients");
        }
        
           
            
        
        }else{        
        output.setText("Please create a valid message");
        }
    }//GEN-LAST:event_sendButtonMouseClicked

    private void enterAthleteEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterAthleteEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_enterAthleteEmailActionPerformed
public ArrayList<String>  teamNames = new ArrayList(0);
public ArrayList<String> recipients = new ArrayList(0);
public ArrayList<String> teamEmails = new ArrayList(0); 
public int teamSize=0;
public int numRecipients=0; 
public boolean remove=false;
    private void addAthleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addAthleteMouseClicked

        if(validEmail(enterAthleteEmail.getText())){
            
 
    


        String athleteName= enterAthleteName.getText();
      String athleteEmail= enterAthleteEmail.getText();
      teamNames.add(athleteName);
      teamEmails.add(athleteEmail);
      enterAthleteName.setText("");
      enterAthleteEmail.setText("");
  teamSize++;
    DefaultListModel teamModel= new DefaultListModel();
    for(int i=0;i<((String[]) teamNames.toArray(new String[teamNames.size()])).length;i++){
   
    
        teamModel.addElement(((String[]) teamNames.toArray(new String[teamNames.size()]))[i]);
        
    }
    teamList.setModel(teamModel);
    
    
    
    
    
    
     File teamNamesFile = new File("F:\\teamNames.txt");
     File teamEmailsFile = new File("F:\\teamEmails.txt");
        boolean teamNamesExists = teamNamesFile.exists();
        boolean teamEmailsExists = teamEmailsFile.exists();
        System.out.println("TeamNamesFile" +teamNamesExists);
        System.out.println("TeamEmailsFile" +teamEmailsExists);
        if(!teamNamesExists){
        try{
                        
                         //you can see if file was correctly made using the followign boolean
                       boolean successfullyMadeNameFile = teamNamesFile.createNewFile();
                       boolean successfullyMadeEmailFile = teamEmailsFile.createNewFile(); 
                    }
                     catch (IOException ioe) {
                       System.out.println("unable to create file, error: " + ioe); 
                    }
       
        }
        try {   Scanner sc = null;
    

            
        String [] teamNamesString = (String[]) teamNames.toArray(new String[teamSize]); 
        String [] teamEmailsString = (String[]) teamEmails.toArray(new String[teamSize]); 
        
                Writer teamWriter;
                teamWriter = new BufferedWriter(new FileWriter("F:\\teamNames.txt", true));
                teamWriter.write(teamNamesString[teamNamesString.length-1]);
                teamWriter.write(System.getProperty("line.separator"));
                teamWriter.close();
                teamWriter = new BufferedWriter(new FileWriter("F:\\teamEmails.txt", true));
                
                teamWriter.write(teamEmailsString[teamEmailsString.length-1]);
                teamWriter.write(System.getProperty("line.separator"));
                teamWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
}else{
JOptionPane.showMessageDialog(null, "Please enter a valid email");
}
    loadTeam();   
    }//GEN-LAST:event_addAthleteMouseClicked
public boolean validEmail(String s){
                int atCount=0;
                int dotCount=0;
                if(s.indexOf("@")==-1 || s.indexOf(".")==-1){
                return false;
                }
                if(s.indexOf("@") > s.indexOf(".")){
                return false;
                }
                 for (int i=0; i < s.length(); i++){
                     if(s.substring(i,i+1) == "@"){
                        atCount ++;
                        }
                         if(s.substring(i,i+1) == "."){
                        dotCount ++;
                        }
            }
            if(dotCount >1 || atCount >1){
            return false;
            }
                return true;
                }
                private boolean isPhoneNumber(String s){
                String master= "0123456789";
                
                if(s.length() != 12){
                return false;
                }
                for(int i=0; i< s.length(); i++){
                String a= s.substring(i,i+1);
                    if(i==3 || i==7 ){
                if(! s.substring(i,i+1).equals( "-")){
                    return false;
                }
                
                }else{
                if(master.indexOf(a)==-1){
                return false;
                }
                }
                    
                }
                return true;
                }
         

DefaultListModel recModel= new DefaultListModel();
      
    private void teamListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teamListMouseClicked
       int selectedIndex = teamList.getSelectedIndex();
       if(remove==true){
     if(teamSize==1){
         teamSize--;
         teamNames = new ArrayList(0);
         teamEmails = new ArrayList(0);
         teamList.setModel(blank);
      PrintWriter awriter = null;
         try {
             awriter = new PrintWriter("F:\\teamNames.txt");
         } catch (FileNotFoundException ex) {
             Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
         }
awriter.print("");
awriter.close();
PrintWriter bwriter = null;
         try {
             bwriter = new PrintWriter("F:\\teamEmails.txt");
         } catch (FileNotFoundException ex) {
             Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
         }
bwriter.print("");
bwriter.close();
teamList.setBackground(Color.white);
    removeAthleteButton.setText("Remove an Athlete");
     }else{
    teamSize--;       
    teamNames.remove(selectedIndex);
    teamEmails.remove(selectedIndex);
    DefaultListModel teamModel= new DefaultListModel();
    for(int i=0;i<((String[]) teamNames.toArray(new String[teamNames.size()])).length;i++){
   
    
        teamModel.addElement(((String[]) teamNames.toArray(new String[teamNames.size()]))[i]);
        
    }
    
    teamList.setModel(teamModel);
    teamList.setBackground(Color.white);
    removeAthleteButton.setText("Remove an Athlete");
    if(teamSize>1){
        teamList.setBackground(Color.white);
        removeAthleteButton.setText("Remove an Athlete");
try {   Scanner sc = null;
    

            
        String [] teamNamesString = (String[]) teamNames.toArray( new String[teamSize]); 
        String [] teamEmailsString = (String[]) teamEmails.toArray( new String[teamSize]); 
        PrintWriter writer = new PrintWriter("F:\\teamNames.txt");
writer.print("");
writer.close();
PrintWriter ewriter = new PrintWriter("F:\\teamEmails.txt");
ewriter.print("");
ewriter.close();
                Writer teamWriter;
                
                teamWriter = new BufferedWriter(new FileWriter("F:\\teamNames.txt", true));
                
                for(int i=0;i<teamNamesString.length;i++){
                teamWriter.write(teamNamesString[i]);
                teamWriter.write(System.getProperty("line.separator"));
                }
                teamWriter.close();
                teamWriter = new BufferedWriter(new FileWriter("F:\\teamEmails.txt", true));
                
                 for(int i=0;i<teamNamesString.length;i++){
                teamWriter.write(teamEmailsString[i]);
                teamWriter.write(System.getProperty("line.separator"));
                }
                teamWriter.close();
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
    
    
       }
    remove=false;
     }
       }else{
       String [] teamEmailsString = (String[]) teamEmails.toArray(new String[teamSize]);
       
       
       String[] arr = teamNames.toArray(new String[teamSize]);
        
    if(recipients.contains(teamEmailsString[selectedIndex])){
        
    }else{
    recModel.addElement(arr[selectedIndex]);
    recipients.add(teamEmailsString[selectedIndex]);
    recipientsList.setModel(recModel);
       numRecipients++;
    }
    
       
       }
       
    }//GEN-LAST:event_teamListMouseClicked
private void loadTeam(){
teamSize=0;
    Scanner sc = null;
    try {
        sc = new Scanner(new File("F:\\teamNames.txt"));
    } catch (FileNotFoundException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }
ArrayList<String> nameLines = new ArrayList<String>();
while (sc.hasNextLine()) {
  nameLines.add(sc.nextLine());
  //teamNames.add(sc.nextLine());
  teamSize++;
}
teamNames=nameLines;
String[] arr = nameLines.toArray(new String[0]);
        DefaultListModel teamModel= new DefaultListModel();
    for(int i=0;i<arr.length;i++){
    teamModel.addElement(arr[i]);
    }
    teamList.setModel(teamModel);
    
Scanner esc = null;
    try {
        esc = new Scanner(new File("F:\\teamEmails.txt"));
    } catch (FileNotFoundException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }
ArrayList<String> emailLines = new ArrayList<String>();
while (esc.hasNextLine()) {
  emailLines.add(esc.nextLine());
 
};  
teamEmails=emailLines;
  
    
    
}
public DefaultListModel blank = new DefaultListModel() ;
    private void newTeamButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newTeamButtonMouseClicked
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you create a new team? This will overwrite your current team.", "This will overwrite your current team.",  JOptionPane.YES_NO_OPTION);
if (reply == JOptionPane.YES_OPTION)
{
    teamSize=0;
            try {
                new FileOutputStream("F:\\teamNames.txt").close();
                new FileOutputStream("F:\\teamEmails.txt").close();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            teamList.setModel(blank);
            
            loadTeam();
}
    }//GEN-LAST:event_newTeamButtonMouseClicked

    private void recipientsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_recipientsListMouseClicked
       int selectedIndex=recipientsList.getSelectedIndex();
       
       
       String[] arr = teamNames.toArray(new String[teamSize]);
        
    if(arr.length<=1){
    recModel=new DefaultListModel();
    recipients = new ArrayList(0);
    recipientsList.setModel(recModel);
    }else{
    recipients.remove(selectedIndex);
    recModel.removeElement(arr[selectedIndex]);
    recipientsList.setModel(recModel);
    }
    recipientsList.setModel(recModel);
    }//GEN-LAST:event_recipientsListMouseClicked

    private void selectAllButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_selectAllButtonMouseClicked
       recipients=teamEmails;
       String[] arr = teamNames.toArray(new String[0]);
        DefaultListModel allModel= new DefaultListModel();
    for(int i=0;i<arr.length;i++){
    allModel.addElement(arr[i]);
    }
       recModel=allModel;
       recipientsList.setModel(recModel);
    }//GEN-LAST:event_selectAllButtonMouseClicked

    private void paceCalcButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paceCalcButtonMouseClicked
       
        if(isValidTime(timedMile.getText())==true){
       int totalSeconds=getTotalSeconds(timedMile.getText());
       easyPace.setText(secsToMins((int) (totalSeconds*1.65)));
       mediumPace.setText(secsToMins((int) (totalSeconds*1.5)));
       tempoPace.setText(secsToMins((int) (totalSeconds*1.25)));
       intervalPace.setText(secsToMins((int) (totalSeconds*1.1)));
       
       }else{
       JOptionPane.showMessageDialog(null, "Please enter a valid time");
       }
    }//GEN-LAST:event_paceCalcButtonMouseClicked

    private void easySetPaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_easySetPaceMouseClicked
       time.setText(easyPace.getText());
    }//GEN-LAST:event_easySetPaceMouseClicked

    private void medSetPaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medSetPaceMouseClicked
       time.setText(mediumPace.getText());
    }//GEN-LAST:event_medSetPaceMouseClicked

    private void tempSetPaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tempSetPaceMouseClicked
        time.setText(tempoPace.getText());
    }//GEN-LAST:event_tempSetPaceMouseClicked

    private void intervalSetPaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_intervalSetPaceMouseClicked
        time.setText(intervalPace.getText());
    }//GEN-LAST:event_intervalSetPaceMouseClicked

    private void removeAthleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeAthleteButtonMouseClicked
        if(teamNames.isEmpty()){
            remove=false;
            teamList.setBackground(Color.white);
        } else if(removeAthleteButton.getText().equals("Remove an Athlete")){
            removeAthleteButton.setText("Cancel");
            remove=true;
            teamList.setBackground(Color.red);
        }else{
          removeAthleteButton.setText("Remove an Athlete");  
          remove=false;
          teamList.setBackground(Color.white);
        }
        
    }//GEN-LAST:event_removeAthleteButtonMouseClicked

    private void createCustomMessageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createCustomMessageMouseClicked
     String path = JOptionPane.showInputDialog("Type your message");
     output.setText(path);
     valid=true;
    }//GEN-LAST:event_createCustomMessageMouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        Desktop desktop = Desktop.getDesktop();
        File file= new File("F:\\coachWorkout.txt");
        
    try {
        file.setReadOnly();
        desktop.open(file);
    } catch (IOException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }/*
        BufferedReader br = null;
    try {
        br = new BufferedReader(new FileReader("F:\\coachWorkout.txt"));
    } catch (FileNotFoundException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }
String log = "";
        String line;
    try {
        while ((line = br.readLine()) != null) {
            log = log+ "\n" + br.readLine();
        }   } catch (IOException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }
    try {
        br.close();
    } catch (IOException ex) {
        Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
    }
        JOptionPane.showMessageDialog(null,log);
    */
    }//GEN-LAST:event_jButton1MouseClicked

    private void resetLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetLogMouseClicked
        int reply = JOptionPane.showConfirmDialog(null, "Are you sure you want to clear your logs?", "This will overwrite your current team.",  JOptionPane.YES_NO_OPTION);
if (reply == JOptionPane.YES_OPTION)
{
    PrintWriter writer = null;
            try {
                writer = new PrintWriter("F:\\coachWorkout.txt");
            } catch (FileNotFoundException ex) {
                Logger.getLogger(CompSciGui.class.getName()).log(Level.SEVERE, null, ex);
            }
writer.print("");
writer.close();
    
}
    }//GEN-LAST:event_resetLogMouseClicked
private boolean isValidTime(String s){
                String master= "0123456789";
                
                if(s.length() != 5 && s.length() != 4 ){
                return false;
                }
              

             

     
                if(s.length()==5){
                for(int i=0; i< s.length(); i++){
                String a= s.substring(i,i+1);
                    if(i==2  ){
                if(! s.substring(i,i+1).equals( ":")){
                    return false;
                }
                
                }else{
                if(master.indexOf(a)==-1){
                return false;
                }
                
                    
                }
                  
                }
                  if(Integer.parseInt(s.substring(3,5))>59){
               return false;
                }
                }
                  if(s.length() ==4){
                  for(int i=0; i< s.length(); i++){
                String a= s.substring(i,i+1);
                    if(i==1  ){
                if(! s.substring(i,i+1).equals( ":")){
                    return false;
                }
                
                }else{
                if(master.indexOf(a)==-1){
                return false;
                }
                
                    
                }
                  
                }
                  System.out.println(Integer.parseInt(s.substring(2,4)));
                  if(Integer.parseInt(s.substring(2,4))>59){
               return false;
                }
                  }
                  
                  
                return true;
               
}
public int getTotalSeconds(String s){
int total=0;
    if(s.length()==5){
  total=0;
int minutes= Integer.parseInt(s.substring(0,2));

int secs=Integer.parseInt(s.substring(3,5));
total= secs + (minutes*60);
}
if(s.length()==4){
 total=0;
int minutes= Integer.parseInt(s.substring(0,1));

int secs=Integer.parseInt(s.substring(2,4));
total= secs + (minutes*60);
}
return total;
}
public String secsToMins(int n){

int m= n/60;
int s=n%60;
String ms= Integer.toString(m);
String ss= Integer.toString(s);
if(ss.length()==1){
    ss="0"+ss;
}
String mins= (ms+":"+ss);


return mins;
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompSciGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    //</editor-fold>
    
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                new CompSciGui().setVisible(true);
                
            }
            
        });
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAthlete;
    private javax.swing.JButton compileButton;
    private javax.swing.JButton createCustomMessage;
    private javax.swing.JTextField distance;
    private javax.swing.JTextField easyPace;
    private javax.swing.JButton easySetPace;
    private javax.swing.JTextField enterAthleteEmail;
    private javax.swing.JTextField enterAthleteName;
    private javax.swing.JTextField intervalPace;
    private javax.swing.JButton intervalSetPace;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton medSetPace;
    private javax.swing.JTextField mediumPace;
    private javax.swing.JButton newTeamButton;
    private javax.swing.JTextArea output;
    private javax.swing.JButton paceCalcButton;
    private javax.swing.JList recipientsList;
    private javax.swing.JButton removeAthleteButton;
    private javax.swing.JTextField reps;
    private javax.swing.JButton resetLog;
    private javax.swing.JButton selectAllButton;
    private javax.swing.JButton sendButton;
    private javax.swing.JTextField sets;
    private javax.swing.JList teamList;
    private javax.swing.JButton tempSetPace;
    private javax.swing.JTextField tempoPace;
    private javax.swing.JTextField time;
    private javax.swing.JTextField timedMile;
    // End of variables declaration//GEN-END:variables

    private String readFile(String testtxt, Charset UTF_8) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    private void newLine() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}

